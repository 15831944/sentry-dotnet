using System.Net;

namespace Sentry
{
    /// <summary>
    /// Information regarding a response to event submission
    /// </summary>
    public class SentryResponse
    {
        internal static SentryResponse Disabled { get; } = new SentryResponse(false, errorMessage: "SDK Disabled");

        /// <summary>
        /// The Id generated by Sentry for the event
        /// </summary>
        public string Id { get; }
        /// <summary>
        /// Whether the request to sentry was successful or not
        /// </summary>
        /// <remarks>
        /// If the transport chosen is based on a background client,
        /// a response with Id is generated when the event is queued for submission.
        /// That means that whether the actual event capture is unknown to
        /// be successful or not at the time of creation.
        /// </remarks>
        public bool? Success { get; }
        /// <summary>
        /// The HTTP response message status code
        /// </summary>
        /// <remarks>
        /// In case the HTTP call was not issued yet (background client) or
        /// when it was not possible to make the HTTP call this value will be null.
        /// An example where this is null is when the rate limit is reached
        /// and the SDK throttles event submission
        /// </remarks>
        public HttpStatusCode? HttpStatusCode { get; }
        /// <summary>
        /// The error message provided, if any.
        /// </summary>
        /// <remarks>
        /// The Header value of X-Sentry-Error
        /// </remarks>
        public string ErrorMessage { get; }

        internal SentryResponse(
            bool success,
            string id = null,
            HttpStatusCode? httpStatusCode = null,
            string errorMessage = null)
        {
            Success = success;
            Id = id;
            HttpStatusCode = httpStatusCode;
            ErrorMessage = errorMessage;
        }

        /// <summary>
        /// Returns a <see cref="System.String" /> that represents this instance.
        /// </summary>
        /// <returns>
        /// A <see cref="System.String" /> that represents this instance.
        /// </returns>
        public override string ToString()
            => $"Sentry Response: {nameof(Id)}: '{Id}', " +
               $"{nameof(Success)}: '{Success}', " +
               $"{nameof(HttpStatusCode)}: '{HttpStatusCode}', " +
               $"{nameof(ErrorMessage)}: '{ErrorMessage}'";
    }
}
